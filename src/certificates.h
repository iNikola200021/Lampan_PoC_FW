#ifndef _CERTIFICATES_H_
#define _CERTIFICATES_H_

#ifdef __cplusplus
extern "C"
{
#endif

/* This file is auto-generated by the pycert_bearssl tool.  Do not change it manually.
 * Certificates are BearSSL br_x509_trust_anchor format.  Included certs:
 *
 * Index:    0
 * Label:    MQTTCA
 * Subject:  1.2.840.113549.1.9.1=ca@iotcreative.ru,CN=MQTTCA,OU=HQ,O=IoT Creative,L=Moscow,ST=Moscow,C=RU
 */

#define TAs_NUM 1

static const unsigned char TA_DN0[] = {
    0x30, 0x81, 0x86, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06,
    0x13, 0x02, 0x52, 0x55, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04,
    0x08, 0x0c, 0x06, 0x4d, 0x6f, 0x73, 0x63, 0x6f, 0x77, 0x31, 0x0f, 0x30,
    0x0d, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x06, 0x4d, 0x6f, 0x73, 0x63,
    0x6f, 0x77, 0x31, 0x15, 0x30, 0x13, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c,
    0x0c, 0x49, 0x6f, 0x54, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76,
    0x65, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x02,
    0x48, 0x51, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c,
    0x06, 0x4d, 0x51, 0x54, 0x54, 0x43, 0x41, 0x31, 0x20, 0x30, 0x1e, 0x06,
    0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x09, 0x01, 0x16, 0x11,
    0x63, 0x61, 0x40, 0x69, 0x6f, 0x74, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
    0x76, 0x65, 0x2e, 0x72, 0x75,
};

static const unsigned char TA_RSA_N0[] = {
    0xc4, 0xc2, 0x88, 0x09, 0xa5, 0xba, 0x02, 0x4b, 0x14, 0xa2, 0x24, 0xe9,
    0xd3, 0x81, 0xb1, 0xa0, 0xcd, 0x40, 0x62, 0xb6, 0x1f, 0x85, 0x4a, 0xee,
    0x7a, 0x42, 0x40, 0x06, 0x70, 0x7e, 0x03, 0x58, 0x4d, 0x06, 0x27, 0xb3,
    0x9e, 0x75, 0x42, 0xaa, 0x96, 0xaf, 0xef, 0x2a, 0x99, 0x7d, 0xb3, 0xcf,
    0xd2, 0xea, 0x7d, 0x20, 0x5f, 0x38, 0x07, 0x80, 0x44, 0x52, 0xd6, 0xa9,
    0xc2, 0x15, 0xa7, 0x23, 0x76, 0x5f, 0x78, 0x4a, 0xcb, 0xcd, 0x0e, 0x03,
    0xe3, 0x8e, 0x2d, 0x57, 0xed, 0x51, 0x1e, 0xae, 0xb6, 0xb4, 0x80, 0x51,
    0x8f, 0xb3, 0xe1, 0x32, 0x90, 0x6e, 0xd2, 0xbe, 0x83, 0xb8, 0x56, 0x29,
    0x66, 0x1a, 0xd9, 0x97, 0xdc, 0x48, 0x7d, 0x85, 0x29, 0x5c, 0x93, 0x05,
    0x9d, 0xed, 0x82, 0xec, 0x73, 0x4b, 0x11, 0x0d, 0xd2, 0xc2, 0x37, 0xd4,
    0x00, 0x18, 0x8f, 0x33, 0x21, 0x19, 0xc9, 0x5e, 0xd0, 0xa6, 0xa5, 0x1a,
    0xdd, 0xfd, 0x78, 0x9f, 0x0d, 0xa7, 0x30, 0x33, 0x9a, 0x10, 0x6f, 0x50,
    0xc6, 0x96, 0xd8, 0xd9, 0x65, 0x71, 0x85, 0xab, 0xc1, 0x7b, 0x3b, 0x6d,
    0xfe, 0x9c, 0x9a, 0xbd, 0x20, 0x5e, 0xed, 0xb1, 0x8b, 0xcb, 0x48, 0x72,
    0x76, 0x55, 0x29, 0x08, 0xd4, 0xeb, 0x85, 0x3d, 0xe6, 0xea, 0x2d, 0x4c,
    0xc0, 0x04, 0x6a, 0x52, 0xed, 0xd1, 0x7e, 0x7b, 0x83, 0x27, 0x66, 0x44,
    0x90, 0x33, 0x73, 0x67, 0xbd, 0xcc, 0x0e, 0x92, 0xe2, 0x91, 0x0c, 0x34,
    0x04, 0x94, 0xd6, 0x6c, 0x09, 0xca, 0xe1, 0x48, 0xaf, 0x20, 0x19, 0xa8,
    0x26, 0x89, 0x3c, 0x31, 0x09, 0xa1, 0xdc, 0x53, 0xcb, 0x83, 0xc4, 0xd1,
    0x16, 0xa4, 0x18, 0xb3, 0x5a, 0x8a, 0x12, 0xaf, 0x6a, 0xd9, 0x1c, 0x44,
    0xfa, 0xbf, 0xe8, 0x9d, 0x2a, 0xa0, 0xb6, 0xf5, 0x19, 0xbe, 0x38, 0x2a,
    0x67, 0x32, 0x8d, 0x09,
};

static const unsigned char TA_RSA_E0[] = {
    0x01, 0x00, 0x01,
};

static const br_x509_trust_anchor TAs[] = {
    {
        { (unsigned char *)TA_DN0, sizeof TA_DN0 },
        BR_X509_TA_CA,
        {
            BR_KEYTYPE_RSA,
            { .rsa = {
                (unsigned char *)TA_RSA_N0, sizeof TA_RSA_N0,
                (unsigned char *)TA_RSA_E0, sizeof TA_RSA_E0,
            } }
        }
    },
};

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* ifndef _CERTIFICATES_H_ */
